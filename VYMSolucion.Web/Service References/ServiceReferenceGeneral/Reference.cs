//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VYMSolucion.Web.ServiceReferenceGeneral {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceGeneral.IServiceGeneral")]
    public interface IServiceGeneral {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/LeerTodosCentroAdministrativo", ReplyAction="http://tempuri.org/IServiceGeneral/LeerTodosCentroAdministrativoResponse")]
        VYMSolucion.Model.CentroAdministrativoModel[] LeerTodosCentroAdministrativo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/LeerTodosCentroAdministrativo", ReplyAction="http://tempuri.org/IServiceGeneral/LeerTodosCentroAdministrativoResponse")]
        System.Threading.Tasks.Task<VYMSolucion.Model.CentroAdministrativoModel[]> LeerTodosCentroAdministrativoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/LeerCentroAdministrativo", ReplyAction="http://tempuri.org/IServiceGeneral/LeerCentroAdministrativoResponse")]
        VYMSolucion.Model.CentroAdministrativoModel LeerCentroAdministrativo(int idCentroAdministrativo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/LeerCentroAdministrativo", ReplyAction="http://tempuri.org/IServiceGeneral/LeerCentroAdministrativoResponse")]
        System.Threading.Tasks.Task<VYMSolucion.Model.CentroAdministrativoModel> LeerCentroAdministrativoAsync(int idCentroAdministrativo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/CrearCentroAdministrativo", ReplyAction="http://tempuri.org/IServiceGeneral/CrearCentroAdministrativoResponse")]
        bool CrearCentroAdministrativo(VYMSolucion.Model.CentroAdministrativoModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/CrearCentroAdministrativo", ReplyAction="http://tempuri.org/IServiceGeneral/CrearCentroAdministrativoResponse")]
        System.Threading.Tasks.Task<bool> CrearCentroAdministrativoAsync(VYMSolucion.Model.CentroAdministrativoModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/EditarCentroAdministrativo", ReplyAction="http://tempuri.org/IServiceGeneral/EditarCentroAdministrativoResponse")]
        bool EditarCentroAdministrativo(VYMSolucion.Model.CentroAdministrativoModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/EditarCentroAdministrativo", ReplyAction="http://tempuri.org/IServiceGeneral/EditarCentroAdministrativoResponse")]
        System.Threading.Tasks.Task<bool> EditarCentroAdministrativoAsync(VYMSolucion.Model.CentroAdministrativoModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/EliminarCentroAdministrativo", ReplyAction="http://tempuri.org/IServiceGeneral/EliminarCentroAdministrativoResponse")]
        bool EliminarCentroAdministrativo(VYMSolucion.Model.CentroAdministrativoModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/EliminarCentroAdministrativo", ReplyAction="http://tempuri.org/IServiceGeneral/EliminarCentroAdministrativoResponse")]
        System.Threading.Tasks.Task<bool> EliminarCentroAdministrativoAsync(VYMSolucion.Model.CentroAdministrativoModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ListaTodasUbicacionGeografica", ReplyAction="http://tempuri.org/IServiceGeneral/ListaTodasUbicacionGeograficaResponse")]
        VYMSolucion.Model.ComboModel[] ListaTodasUbicacionGeografica();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ListaTodasUbicacionGeografica", ReplyAction="http://tempuri.org/IServiceGeneral/ListaTodasUbicacionGeograficaResponse")]
        System.Threading.Tasks.Task<VYMSolucion.Model.ComboModel[]> ListaTodasUbicacionGeograficaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ListaTodasUbicacionGeograficaHijo", ReplyAction="http://tempuri.org/IServiceGeneral/ListaTodasUbicacionGeograficaHijoResponse")]
        VYMSolucion.Model.ComboModel[] ListaTodasUbicacionGeograficaHijo(int idUbicacionGeograficaPadre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ListaTodasUbicacionGeograficaHijo", ReplyAction="http://tempuri.org/IServiceGeneral/ListaTodasUbicacionGeograficaHijoResponse")]
        System.Threading.Tasks.Task<VYMSolucion.Model.ComboModel[]> ListaTodasUbicacionGeograficaHijoAsync(int idUbicacionGeograficaPadre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ValidarCuentaUsuario", ReplyAction="http://tempuri.org/IServiceGeneral/ValidarCuentaUsuarioResponse")]
        bool ValidarCuentaUsuario(VYMSolucion.Model.IniciarSesionModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ValidarCuentaUsuario", ReplyAction="http://tempuri.org/IServiceGeneral/ValidarCuentaUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ValidarCuentaUsuarioAsync(VYMSolucion.Model.IniciarSesionModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ObtenerDatosUsuario", ReplyAction="http://tempuri.org/IServiceGeneral/ObtenerDatosUsuarioResponse")]
        VYMSolucion.Model.DatosUsuarioModel ObtenerDatosUsuario(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ObtenerDatosUsuario", ReplyAction="http://tempuri.org/IServiceGeneral/ObtenerDatosUsuarioResponse")]
        System.Threading.Tasks.Task<VYMSolucion.Model.DatosUsuarioModel> ObtenerDatosUsuarioAsync(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/CrearRegistroProfesional", ReplyAction="http://tempuri.org/IServiceGeneral/CrearRegistroProfesionalResponse")]
        bool CrearRegistroProfesional(VYMSolucion.Model.ProfesionalModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/CrearRegistroProfesional", ReplyAction="http://tempuri.org/IServiceGeneral/CrearRegistroProfesionalResponse")]
        System.Threading.Tasks.Task<bool> CrearRegistroProfesionalAsync(VYMSolucion.Model.ProfesionalModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/CrearRegistroPaciente", ReplyAction="http://tempuri.org/IServiceGeneral/CrearRegistroPacienteResponse")]
        bool CrearRegistroPaciente(VYMSolucion.Model.PacienteModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/CrearRegistroPaciente", ReplyAction="http://tempuri.org/IServiceGeneral/CrearRegistroPacienteResponse")]
        System.Threading.Tasks.Task<bool> CrearRegistroPacienteAsync(VYMSolucion.Model.PacienteModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ActivarCuenta", ReplyAction="http://tempuri.org/IServiceGeneral/ActivarCuentaResponse")]
        VYMSolucion.Model.DatosUsuarioModel ActivarCuenta(string parametroActivacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ActivarCuenta", ReplyAction="http://tempuri.org/IServiceGeneral/ActivarCuentaResponse")]
        System.Threading.Tasks.Task<VYMSolucion.Model.DatosUsuarioModel> ActivarCuentaAsync(string parametroActivacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ValidarCorreoRepetido", ReplyAction="http://tempuri.org/IServiceGeneral/ValidarCorreoRepetidoResponse")]
        bool ValidarCorreoRepetido(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ValidarCorreoRepetido", ReplyAction="http://tempuri.org/IServiceGeneral/ValidarCorreoRepetidoResponse")]
        System.Threading.Tasks.Task<bool> ValidarCorreoRepetidoAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ValidarCedulaRuc", ReplyAction="http://tempuri.org/IServiceGeneral/ValidarCedulaRucResponse")]
        bool ValidarCedulaRuc(string cedulaRuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ValidarCedulaRuc", ReplyAction="http://tempuri.org/IServiceGeneral/ValidarCedulaRucResponse")]
        System.Threading.Tasks.Task<bool> ValidarCedulaRucAsync(string cedulaRuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/CrearPaciente", ReplyAction="http://tempuri.org/IServiceGeneral/CrearPacienteResponse")]
        bool CrearPaciente(VYMSolucion.Model.PacienteTitularModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/CrearPaciente", ReplyAction="http://tempuri.org/IServiceGeneral/CrearPacienteResponse")]
        System.Threading.Tasks.Task<bool> CrearPacienteAsync(VYMSolucion.Model.PacienteTitularModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/LeerPaciente", ReplyAction="http://tempuri.org/IServiceGeneral/LeerPacienteResponse")]
        VYMSolucion.Model.PacienteTitularModel LeerPaciente(long idEntidadPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/LeerPaciente", ReplyAction="http://tempuri.org/IServiceGeneral/LeerPacienteResponse")]
        System.Threading.Tasks.Task<VYMSolucion.Model.PacienteTitularModel> LeerPacienteAsync(long idEntidadPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/LeerPacientesEntidadPersonaPadre", ReplyAction="http://tempuri.org/IServiceGeneral/LeerPacientesEntidadPersonaPadreResponse")]
        VYMSolucion.Model.PacienteTitularModel[] LeerPacientesEntidadPersonaPadre(long idEntidadPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/LeerPacientesEntidadPersonaPadre", ReplyAction="http://tempuri.org/IServiceGeneral/LeerPacientesEntidadPersonaPadreResponse")]
        System.Threading.Tasks.Task<VYMSolucion.Model.PacienteTitularModel[]> LeerPacientesEntidadPersonaPadreAsync(long idEntidadPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/EditarPaciente", ReplyAction="http://tempuri.org/IServiceGeneral/EditarPacienteResponse")]
        bool EditarPaciente(VYMSolucion.Model.PacienteTitularModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/EditarPaciente", ReplyAction="http://tempuri.org/IServiceGeneral/EditarPacienteResponse")]
        System.Threading.Tasks.Task<bool> EditarPacienteAsync(VYMSolucion.Model.PacienteTitularModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ActivarDesactivarPaciente", ReplyAction="http://tempuri.org/IServiceGeneral/ActivarDesactivarPacienteResponse")]
        bool ActivarDesactivarPaciente(VYMSolucion.Model.PacienteTitularModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGeneral/ActivarDesactivarPaciente", ReplyAction="http://tempuri.org/IServiceGeneral/ActivarDesactivarPacienteResponse")]
        System.Threading.Tasks.Task<bool> ActivarDesactivarPacienteAsync(VYMSolucion.Model.PacienteTitularModel model);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceGeneralChannel : VYMSolucion.Web.ServiceReferenceGeneral.IServiceGeneral, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceGeneralClient : System.ServiceModel.ClientBase<VYMSolucion.Web.ServiceReferenceGeneral.IServiceGeneral>, VYMSolucion.Web.ServiceReferenceGeneral.IServiceGeneral {
        
        public ServiceGeneralClient() {
        }
        
        public ServiceGeneralClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceGeneralClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceGeneralClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceGeneralClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public VYMSolucion.Model.CentroAdministrativoModel[] LeerTodosCentroAdministrativo() {
            return base.Channel.LeerTodosCentroAdministrativo();
        }
        
        public System.Threading.Tasks.Task<VYMSolucion.Model.CentroAdministrativoModel[]> LeerTodosCentroAdministrativoAsync() {
            return base.Channel.LeerTodosCentroAdministrativoAsync();
        }
        
        public VYMSolucion.Model.CentroAdministrativoModel LeerCentroAdministrativo(int idCentroAdministrativo) {
            return base.Channel.LeerCentroAdministrativo(idCentroAdministrativo);
        }
        
        public System.Threading.Tasks.Task<VYMSolucion.Model.CentroAdministrativoModel> LeerCentroAdministrativoAsync(int idCentroAdministrativo) {
            return base.Channel.LeerCentroAdministrativoAsync(idCentroAdministrativo);
        }
        
        public bool CrearCentroAdministrativo(VYMSolucion.Model.CentroAdministrativoModel model) {
            return base.Channel.CrearCentroAdministrativo(model);
        }
        
        public System.Threading.Tasks.Task<bool> CrearCentroAdministrativoAsync(VYMSolucion.Model.CentroAdministrativoModel model) {
            return base.Channel.CrearCentroAdministrativoAsync(model);
        }
        
        public bool EditarCentroAdministrativo(VYMSolucion.Model.CentroAdministrativoModel model) {
            return base.Channel.EditarCentroAdministrativo(model);
        }
        
        public System.Threading.Tasks.Task<bool> EditarCentroAdministrativoAsync(VYMSolucion.Model.CentroAdministrativoModel model) {
            return base.Channel.EditarCentroAdministrativoAsync(model);
        }
        
        public bool EliminarCentroAdministrativo(VYMSolucion.Model.CentroAdministrativoModel model) {
            return base.Channel.EliminarCentroAdministrativo(model);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarCentroAdministrativoAsync(VYMSolucion.Model.CentroAdministrativoModel model) {
            return base.Channel.EliminarCentroAdministrativoAsync(model);
        }
        
        public VYMSolucion.Model.ComboModel[] ListaTodasUbicacionGeografica() {
            return base.Channel.ListaTodasUbicacionGeografica();
        }
        
        public System.Threading.Tasks.Task<VYMSolucion.Model.ComboModel[]> ListaTodasUbicacionGeograficaAsync() {
            return base.Channel.ListaTodasUbicacionGeograficaAsync();
        }
        
        public VYMSolucion.Model.ComboModel[] ListaTodasUbicacionGeograficaHijo(int idUbicacionGeograficaPadre) {
            return base.Channel.ListaTodasUbicacionGeograficaHijo(idUbicacionGeograficaPadre);
        }
        
        public System.Threading.Tasks.Task<VYMSolucion.Model.ComboModel[]> ListaTodasUbicacionGeograficaHijoAsync(int idUbicacionGeograficaPadre) {
            return base.Channel.ListaTodasUbicacionGeograficaHijoAsync(idUbicacionGeograficaPadre);
        }
        
        public bool ValidarCuentaUsuario(VYMSolucion.Model.IniciarSesionModel model) {
            return base.Channel.ValidarCuentaUsuario(model);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarCuentaUsuarioAsync(VYMSolucion.Model.IniciarSesionModel model) {
            return base.Channel.ValidarCuentaUsuarioAsync(model);
        }
        
        public VYMSolucion.Model.DatosUsuarioModel ObtenerDatosUsuario(string usuario) {
            return base.Channel.ObtenerDatosUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task<VYMSolucion.Model.DatosUsuarioModel> ObtenerDatosUsuarioAsync(string usuario) {
            return base.Channel.ObtenerDatosUsuarioAsync(usuario);
        }
        
        public bool CrearRegistroProfesional(VYMSolucion.Model.ProfesionalModel model) {
            return base.Channel.CrearRegistroProfesional(model);
        }
        
        public System.Threading.Tasks.Task<bool> CrearRegistroProfesionalAsync(VYMSolucion.Model.ProfesionalModel model) {
            return base.Channel.CrearRegistroProfesionalAsync(model);
        }
        
        public bool CrearRegistroPaciente(VYMSolucion.Model.PacienteModel model) {
            return base.Channel.CrearRegistroPaciente(model);
        }
        
        public System.Threading.Tasks.Task<bool> CrearRegistroPacienteAsync(VYMSolucion.Model.PacienteModel model) {
            return base.Channel.CrearRegistroPacienteAsync(model);
        }
        
        public VYMSolucion.Model.DatosUsuarioModel ActivarCuenta(string parametroActivacion) {
            return base.Channel.ActivarCuenta(parametroActivacion);
        }
        
        public System.Threading.Tasks.Task<VYMSolucion.Model.DatosUsuarioModel> ActivarCuentaAsync(string parametroActivacion) {
            return base.Channel.ActivarCuentaAsync(parametroActivacion);
        }
        
        public bool ValidarCorreoRepetido(string correo) {
            return base.Channel.ValidarCorreoRepetido(correo);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarCorreoRepetidoAsync(string correo) {
            return base.Channel.ValidarCorreoRepetidoAsync(correo);
        }
        
        public bool ValidarCedulaRuc(string cedulaRuc) {
            return base.Channel.ValidarCedulaRuc(cedulaRuc);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarCedulaRucAsync(string cedulaRuc) {
            return base.Channel.ValidarCedulaRucAsync(cedulaRuc);
        }
        
        public bool CrearPaciente(VYMSolucion.Model.PacienteTitularModel model) {
            return base.Channel.CrearPaciente(model);
        }
        
        public System.Threading.Tasks.Task<bool> CrearPacienteAsync(VYMSolucion.Model.PacienteTitularModel model) {
            return base.Channel.CrearPacienteAsync(model);
        }
        
        public VYMSolucion.Model.PacienteTitularModel LeerPaciente(long idEntidadPersona) {
            return base.Channel.LeerPaciente(idEntidadPersona);
        }
        
        public System.Threading.Tasks.Task<VYMSolucion.Model.PacienteTitularModel> LeerPacienteAsync(long idEntidadPersona) {
            return base.Channel.LeerPacienteAsync(idEntidadPersona);
        }
        
        public VYMSolucion.Model.PacienteTitularModel[] LeerPacientesEntidadPersonaPadre(long idEntidadPersona) {
            return base.Channel.LeerPacientesEntidadPersonaPadre(idEntidadPersona);
        }
        
        public System.Threading.Tasks.Task<VYMSolucion.Model.PacienteTitularModel[]> LeerPacientesEntidadPersonaPadreAsync(long idEntidadPersona) {
            return base.Channel.LeerPacientesEntidadPersonaPadreAsync(idEntidadPersona);
        }
        
        public bool EditarPaciente(VYMSolucion.Model.PacienteTitularModel model) {
            return base.Channel.EditarPaciente(model);
        }
        
        public System.Threading.Tasks.Task<bool> EditarPacienteAsync(VYMSolucion.Model.PacienteTitularModel model) {
            return base.Channel.EditarPacienteAsync(model);
        }
        
        public bool ActivarDesactivarPaciente(VYMSolucion.Model.PacienteTitularModel model) {
            return base.Channel.ActivarDesactivarPaciente(model);
        }
        
        public System.Threading.Tasks.Task<bool> ActivarDesactivarPacienteAsync(VYMSolucion.Model.PacienteTitularModel model) {
            return base.Channel.ActivarDesactivarPacienteAsync(model);
        }
    }
}
